date: 2013-11-24
title: "In which H learns How the Internet Works"

<div class="posts">
  <h1>In which H learns How the Internet Works</h1><hr>

  <p>After last week's small but concrete triumphs, this week seemed to be a step backwards into the bewildering fog of computerly witchcraft. Though I did manage to survive it, this week was full of the sort of frustration that goes hand in hand with a kind of guilt that I am not putting in the right effort or energy into the way the material is being presented. We covered a fairly wide range of topics, and given the tenuous mastery most of us have in naviagating through this sea of unfamiliar knowledge, trying to fit all the new material into some frame of reference, or even trust that there was one, proved difficult.</p>

  <p>To be more explict: Our homework assignment over the weekend, which was an introduction to SQL, in conjunction with the Farmers' Market Finder project, had me calibrated to learning more about relational databases and how to manage them. However, instead of discussing the project or the reading, we had two days of working with rspec--something I'll admit that I wanted to learn more of, but it seemed strange that 1) we did not relate it back to our project, and 2) we didn't get much structured practice in writing rspecs. With the nervousness that inevitably comes with not feeling like what I am learning is totally settled, we were dropped into the deep end of networking and building apps through the Sinatra framework. There was a day in which we had almost 3.5 hours of continuous lecture, with very little interactive activities. The remainder of the week seemed to be backwards of how the Sinatra unit should have been: an assignment asking us to build another Sinatra app that was effectively copying code nobody understood out of a textbook, followed by the instructor going through the steps of building an app with the whole class, followed by homework explaning the basics of Sinatra, using local servers, as well as basic HTML and CSS tutorials.</p>

  <p>I understand the objectives of experiencing realistic coding situations that require us to navigate ourselves out of black holes of apparent gobbledegook, but from a pedagogical standpoint it doesn't seem like the most important lesson to be emphasizing quite yet, in the still tottering first phase of instruction. I felt I learned far more from the beginner tutorials assigned as homework this weekend than I did from the entire week of class. It felt analagous to what sitting through a week's worth of scholarly discussion on late Romantic chromaticism versus applied dissonance in early Baroque keyboard music must feel to someone who had never heard of a piano.</p>

  <p>But again, I realize that the emotional and psychological adjustment to this sort of learning process is as much a part of ADA and web development as the technical skills. My own tendency to put massive pressure on myself only hinders me from accepting that mastering this material is going to take a long time, and I am learning to make the painful but necessary journey away from a mental paradigm in which understanding and, synonymously, self-validation, comes quickly.</p>

</div>